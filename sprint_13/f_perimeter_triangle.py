# https://contest.yandex.ru/contest/24734/problems/F/
"""
Перед сном Рита решила поиграть в игру на телефоне. Дан массив целых чисел, в котором каждый элемент обозначает длину стороны треугольника. Нужно определить максимально возможный периметр треугольника, составленного из сторон с длинами из заданного массива. Помогите Рите скорее закончить игру и пойти спать.

Напомним, что из трёх отрезков с длинами a ≤ b ≤ c можно составить треугольник, если выполнено неравенство треугольника: c < a + b

Разберём пример:
даны длины сторон 6, 3, 3, 2. Попробуем в качестве наибольшей стороны выбрать 6. Неравенство треугольника не может выполниться, так как остались 3, 3, 2 —– максимальная сумма из них равна 6.

Без шестёрки оставшиеся три отрезка уже образуют треугольник со сторонами 3, 3, 2. Неравенство выполняется: 3 < 3 + 2. Периметр равен 3 + 3 + 2 = 8.

Формат ввода
В первой строке записано количество отрезков n, 3≤ n≤ 10000.

Во второй строке записано n неотрицательных чисел, не превосходящих 10 000, –— длины отрезков.

Формат вывода
Нужно вывести одно число —– наибольший периметр треугольника.

Гарантируется, что тройка чисел, которая может образовать треугольник, всегда есть.

Пример 1
Ввод	
4
6 3 3 2
Вывод
8
"""




def get_triangle_perimeter(sides):
    sides.sort(reverse=True)
    c, a, b = 0, 1, 2
    for _ in range(len(sides) - 2):
        if sides[c] < (sides[a] + sides[b]):
            return sides[a] + sides[b] + sides[c]
        c, a, b = c + 1, a + 1, b + 1


def main():
    _ = int(input())
    sides = [int(i) for i in input().split()]
    print(get_triangle_perimeter(sides))


if __name__ == '__main__':
    main()